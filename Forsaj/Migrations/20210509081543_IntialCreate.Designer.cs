// <auto-generated />
using System;
using Forsaj.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forsaj.Migrations
{
    [DbContext(typeof(ForsajContext))]
    [Migration("20210509081543_IntialCreate")]
    partial class IntialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Forsaj.Models.Tables.Ban_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_BAN_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Cars_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ABS")
                        .HasColumnType("bit")
                        .HasColumnName("ABS");

                    b.Property<bool>("Diski")
                        .HasColumnType("bit")
                        .HasColumnName("DISKI");

                    b.Property<bool>("Dəri_Salon")
                        .HasColumnType("bit")
                        .HasColumnName("DERI_SALON");

                    b.Property<bool>("Kamera")
                        .HasColumnType("bit")
                        .HasColumnName("KAMERA");

                    b.Property<bool>("Kondisioner")
                        .HasColumnType("bit")
                        .HasColumnName("KONDISIONER");

                    b.Property<bool>("Ksenon_Lampalar")
                        .HasColumnType("bit")
                        .HasColumnName("KSENON_LAMPALAR");

                    b.Property<bool>("Lyuk")
                        .HasColumnType("bit")
                        .HasColumnName("LYUK");

                    b.Property<bool>("Park_Radar")
                        .HasColumnType("bit")
                        .HasColumnName("PARK_RADAR");

                    b.Property<bool>("Qapanma")
                        .HasColumnType("bit")
                        .HasColumnName("QAPANMA");

                    b.Property<bool>("Sensor")
                        .HasColumnType("bit")
                        .HasColumnName("SENSOR");

                    b.HasKey("Id");

                    b.ToTable("TBL_CARS_DETAILS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_CITY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COLOR");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COMPANY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COUNTRY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Money")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MONEY");

                    b.HasKey("Id");

                    b.ToTable("TBL_CURRENCY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Fuel_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_FUEL_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("TBL_IMAGE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Login_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Error")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IP")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LOGIN_LOG");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_MARKA");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Model_Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int")
                        .HasColumnName("MARKA_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("TBL_MODEL_CARS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("CAPACITY");

                    b.HasKey("Id");

                    b.ToTable("TBL_POWER");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("RoleId");

                    b.ToTable("TBL_ROLE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Speed_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_SPEED_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Telefon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NUMBER");

                    b.HasKey("Id");

                    b.ToTable("TBL_TELEFON");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_TRANSMISSION");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("First_Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PASSWORD");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("TBL_USERS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("USER_AND_ROLE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndTelefon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TelefonId")
                        .HasColumnType("int")
                        .HasColumnName("TELEFON_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("TelefonId");

                    b.HasIndex("UserId");

                    b.ToTable("USER_AND_TELEFON");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Model_Cars", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Marka", "Marka")
                        .WithMany("Model_Cars")
                        .HasForeignKey("MarkaId");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndRole", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Role", "Role")
                        .WithMany("UserAndRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forsaj.Models.Tables.User", "User")
                        .WithMany("UserAndRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndTelefon", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Telefon", "Telefon")
                        .WithMany("UserAndTelefons")
                        .HasForeignKey("TelefonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forsaj.Models.Tables.User", "User")
                        .WithMany("UserAndTelefons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telefon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Marka", b =>
                {
                    b.Navigation("Model_Cars");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Role", b =>
                {
                    b.Navigation("UserAndRoles");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Telefon", b =>
                {
                    b.Navigation("UserAndTelefons");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.Navigation("UserAndRoles");

                    b.Navigation("UserAndTelefons");
                });
#pragma warning restore 612, 618
        }
    }
}
