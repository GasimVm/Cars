// <auto-generated />
using System;
using Forsaj.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forsaj.Migrations
{
    [DbContext(typeof(ForsajContext))]
    [Migration("20210607132710_AddHPower")]
    partial class AddHPower
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Forsaj.Models.Tables.Ban_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_BAN_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_CITY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COLOR");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COMPANY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_COUNTRY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Money")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MONEY");

                    b.HasKey("Id");

                    b.ToTable("TBL_CURRENCY");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ABS")
                        .HasColumnType("bit")
                        .HasColumnName("ABS");

                    b.Property<bool>("Central_Sistem")
                        .HasColumnType("bit")
                        .HasColumnName("CREATE_SISTEM");

                    b.Property<bool>("Conditioner")
                        .HasColumnType("bit")
                        .HasColumnName("CONDITIONER");

                    b.Property<bool>("Disk")
                        .HasColumnType("bit")
                        .HasColumnName("DISK");

                    b.Property<bool>("Ksenon")
                        .HasColumnType("bit")
                        .HasColumnName("KSENON");

                    b.Property<bool>("Lyuk")
                        .HasColumnType("bit")
                        .HasColumnName("LYUK");

                    b.Property<int?>("Model_CarsId")
                        .HasColumnType("int");

                    b.Property<int?>("Model_Cars_Id")
                        .HasColumnType("int")
                        .HasColumnName("MODEL_CARS_ID");

                    b.Property<bool>("Park_Radar")
                        .HasColumnType("bit")
                        .HasColumnName("PARK_RADAR");

                    b.Property<bool>("Salon")
                        .HasColumnType("bit")
                        .HasColumnName("SALON");

                    b.HasKey("Id");

                    b.HasIndex("Model_CarsId");

                    b.ToTable("TBL_DETAILS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Fuel_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_FUEL_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("TBL_IMAGE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Login_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Error")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IP")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LOGIN_LOG");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_MARKA");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Model_Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int")
                        .HasColumnName("MARKA_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("TBL_MODEL_CARS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Ban_TypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Barter")
                        .HasColumnType("bit")
                        .HasColumnName("BARTER");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("COUNT");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATE_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("Fuel_TypeId")
                        .HasColumnType("int");

                    b.Property<int>("HPower")
                        .HasColumnType("int");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("Kredit")
                        .HasColumnType("bit")
                        .HasColumnName("KREDIT");

                    b.Property<int?>("Model_CarsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTE");

                    b.Property<int?>("PowerId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<int>("Probeg")
                        .HasColumnType("int")
                        .HasColumnName("PROBEG");

                    b.Property<int?>("Speed_TypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFON");

                    b.Property<int?>("TransmissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("VIP")
                        .HasColumnType("bit")
                        .HasColumnName("VIP");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ban_TypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DetailsId");

                    b.HasIndex("Fuel_TypeId");

                    b.HasIndex("ImageId");

                    b.HasIndex("Model_CarsId");

                    b.HasIndex("PowerId");

                    b.HasIndex("Speed_TypeId");

                    b.HasIndex("TransmissionId");

                    b.HasIndex("UserId");

                    b.HasIndex("YearId");

                    b.ToTable("TBL_POST");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("CAPACITY");

                    b.HasKey("Id");

                    b.ToTable("TBL_POWER");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("RoleId");

                    b.ToTable("TBL_ROLE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Speed_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_SPEED_TYPE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Telefon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NUMBER");

                    b.HasKey("Id");

                    b.ToTable("TBL_TELEFON");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TBL_TRANSMISSION");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("First_Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("PASSWORD");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("TBL_USERS");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("USER_AND_ROLE");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndTelefon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TelefonId")
                        .HasColumnType("int")
                        .HasColumnName("TELEFON_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("TelefonId");

                    b.HasIndex("UserId");

                    b.ToTable("USER_AND_TELEFON");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Create_Year")
                        .HasColumnType("int")
                        .HasColumnName("CREATE_YEAR");

                    b.HasKey("Id");

                    b.ToTable("TBL_YEAR");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Details", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Model_Cars", "Model_Cars")
                        .WithMany("Details")
                        .HasForeignKey("Model_CarsId");

                    b.Navigation("Model_Cars");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Image", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Model_Cars", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Marka", "Marka")
                        .WithMany("Model_Cars")
                        .HasForeignKey("MarkaId");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Post", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Ban_Type", "Ban_Type")
                        .WithMany("Posts")
                        .HasForeignKey("Ban_TypeId");

                    b.HasOne("Forsaj.Models.Tables.City", "City")
                        .WithMany("Posts")
                        .HasForeignKey("CityId");

                    b.HasOne("Forsaj.Models.Tables.Color", "Color")
                        .WithMany("Posts")
                        .HasForeignKey("ColorId");

                    b.HasOne("Forsaj.Models.Tables.Company", "Company")
                        .WithMany("Posts")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Forsaj.Models.Tables.Country", "Country")
                        .WithMany("Posts")
                        .HasForeignKey("CountryId");

                    b.HasOne("Forsaj.Models.Tables.Currency", "Currency")
                        .WithMany("Posts")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Forsaj.Models.Tables.Details", "Details")
                        .WithMany("Posts")
                        .HasForeignKey("DetailsId");

                    b.HasOne("Forsaj.Models.Tables.Fuel_Type", "Fuel_Type")
                        .WithMany("Posts")
                        .HasForeignKey("Fuel_TypeId");

                    b.HasOne("Forsaj.Models.Tables.Image", null)
                        .WithMany("Posts")
                        .HasForeignKey("ImageId");

                    b.HasOne("Forsaj.Models.Tables.Model_Cars", "Model_Cars")
                        .WithMany("Posts")
                        .HasForeignKey("Model_CarsId");

                    b.HasOne("Forsaj.Models.Tables.Power", "Power")
                        .WithMany("Posts")
                        .HasForeignKey("PowerId");

                    b.HasOne("Forsaj.Models.Tables.Speed_Type", "Speed_Type")
                        .WithMany("Posts")
                        .HasForeignKey("Speed_TypeId");

                    b.HasOne("Forsaj.Models.Tables.Transmission", "Transmission")
                        .WithMany("Posts")
                        .HasForeignKey("TransmissionId");

                    b.HasOne("Forsaj.Models.Tables.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId");

                    b.HasOne("Forsaj.Models.Tables.Year", "Year")
                        .WithMany("Posts")
                        .HasForeignKey("YearId");

                    b.Navigation("Ban_Type");

                    b.Navigation("City");

                    b.Navigation("Color");

                    b.Navigation("Company");

                    b.Navigation("Country");

                    b.Navigation("Currency");

                    b.Navigation("Details");

                    b.Navigation("Fuel_Type");

                    b.Navigation("Model_Cars");

                    b.Navigation("Power");

                    b.Navigation("Speed_Type");

                    b.Navigation("Transmission");

                    b.Navigation("User");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndRole", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Role", "Role")
                        .WithMany("UserAndRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forsaj.Models.Tables.User", "User")
                        .WithMany("UserAndRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.UserAndTelefon", b =>
                {
                    b.HasOne("Forsaj.Models.Tables.Telefon", "Telefon")
                        .WithMany("UserAndTelefons")
                        .HasForeignKey("TelefonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forsaj.Models.Tables.User", "User")
                        .WithMany("UserAndTelefons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telefon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Ban_Type", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.City", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Color", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Company", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Country", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Currency", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Details", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Fuel_Type", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Image", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Marka", b =>
                {
                    b.Navigation("Model_Cars");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Model_Cars", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Power", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Role", b =>
                {
                    b.Navigation("UserAndRoles");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Speed_Type", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Telefon", b =>
                {
                    b.Navigation("UserAndTelefons");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Transmission", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("UserAndRoles");

                    b.Navigation("UserAndTelefons");
                });

            modelBuilder.Entity("Forsaj.Models.Tables.Year", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
